/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ ((module) => {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./resources/frontend/AuthService.js":
/*!*******************************************!*\
  !*** ./resources/frontend/AuthService.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\r\n * AuthService - Handles authentication for CollaborInbox\r\n * \r\n * Manages login, logout, token storage, and authentication state across the application.\r\n * Uses Laravel Sanctum for token-based authentication.\r\n */\nvar AuthService = /*#__PURE__*/function () {\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n    this.token = localStorage.getItem('auth_token') || null;\n\n    // Safely parse user data from localStorage\n    try {\n      this.user = JSON.parse(localStorage.getItem('user') || 'null');\n    } catch (e) {\n      console.warn('Error parsing user data from localStorage:', e);\n      this.user = null;\n    }\n\n    // Safely parse tenant data from localStorage\n    try {\n      this.tenant = JSON.parse(localStorage.getItem('tenant') || 'null');\n    } catch (e) {\n      console.warn('Error parsing tenant data from localStorage:', e);\n      this.tenant = null;\n    }\n\n    // Store original fetch for reset purposes\n    this.originalFetch = window.fetch;\n  }\n\n  /**\r\n   * Initialize the auth service and restore session if available\r\n   */\n  AuthService.prototype.init = function () {\n    // Make an API call to verify the token if it exists\n    if (this.token) {\n      return this.getUser().then(function (response) {\n        this.user = response.user;\n        this.tenant = response.tenant;\n        return true;\n      }.bind(this)).catch(function () {\n        // Token is invalid, clear the session\n        this.clearSession();\n        return false;\n      }.bind(this));\n    }\n    return Promise.resolve(false);\n  };\n\n  /**\r\n   * Login user with email and password\r\n   * \r\n   * @param {string} email User email address\r\n   * @param {string} password User password\r\n   * @param {string} deviceName Optional device name for the token\r\n   * @returns {Promise} Promise with login result\r\n   */\n  AuthService.prototype.login = function (email, password, deviceName) {\n    if (deviceName === void 0) {\n      deviceName = null;\n    }\n    var data = {\n      email: email,\n      password: password\n    };\n    if (deviceName) {\n      data.device_name = deviceName;\n    }\n    return fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      body: JSON.stringify(data)\n    }).then(function (response) {\n      if (!response.ok) {\n        return response.json().then(function (err) {\n          throw err;\n        });\n      }\n      return response.json();\n    }).then(function (data) {\n      this.setSession(data.token, data.user, data.tenant);\n      return data;\n    }.bind(this));\n  };\n\n  /**\r\n   * Log the user out\r\n   * \r\n   * @returns {Promise} Promise with logout result\r\n   */\n  AuthService.prototype.logout = function () {\n    return fetch('/api/logout', {\n      method: 'POST',\n      headers: this.getAuthHeaders()\n    }).then(function (response) {\n      this.clearSession();\n      return response.json();\n    }.bind(this)).catch(function (error) {\n      this.clearSession();\n      throw error;\n    }.bind(this));\n  };\n\n  /**\r\n   * Get the current authenticated user\r\n   * \r\n   * @returns {Promise} Promise with user data\r\n   */\n  AuthService.prototype.getUser = function () {\n    return fetch('/api/me', {\n      method: 'GET',\n      headers: this.getAuthHeaders()\n    }).then(function (response) {\n      if (!response.ok) {\n        throw new Error('Failed to get user details');\n      }\n      return response.json();\n    });\n  };\n\n  /**\r\n   * Check if user is authenticated\r\n   * \r\n   * @returns {boolean} True if authenticated\r\n   */\n  AuthService.prototype.isAuthenticated = function () {\n    return !!this.token;\n  };\n\n  /**\r\n   * Get authentication headers for API requests\r\n   * \r\n   * @returns {Object} Headers object\r\n   */\n  AuthService.prototype.getAuthHeaders = function () {\n    var headers = {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest'\n    };\n    if (this.token) {\n      headers['Authorization'] = 'Bearer ' + this.token;\n    }\n    return headers;\n  };\n\n  /**\r\n   * Store session data\r\n   * \r\n   * @param {string} token Auth token\r\n   * @param {Object} user User data\r\n   * @param {Object} tenant Tenant data\r\n   */\n  AuthService.prototype.setSession = function (token, user, tenant) {\n    this.token = token;\n    this.user = user;\n    this.tenant = tenant;\n    localStorage.setItem('auth_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    localStorage.setItem('tenant', JSON.stringify(tenant));\n\n    // Set default Authorization header for fetch requests\n    if (window.fetch) {\n      var originalFetch = window.fetch;\n      this.originalFetch = originalFetch; // Store for reset purposes\n      window.fetch = function (url, options) {\n        options = options || {};\n        if (!options.headers) {\n          options.headers = {};\n        }\n        if (!options.headers['Authorization'] && token) {\n          options.headers['Authorization'] = 'Bearer ' + token;\n        }\n        return originalFetch(url, options);\n      };\n    }\n  };\n\n  /**\r\n   * Clear session data\r\n   */\n  AuthService.prototype.clearSession = function () {\n    this.token = null;\n    this.user = null;\n    this.tenant = null;\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('tenant');\n\n    // Reset fetch to original implementation without the auth interceptor\n    if (window.fetch && this.originalFetch) {\n      window.fetch = this.originalFetch;\n      console.log('Fetch reset to original implementation');\n    }\n\n    // Force reload if on a protected route\n    if (window.location.pathname.includes('/dashboard')) {\n      window.location.href = '/login';\n    }\n  };\n\n  /**\r\n   * Get the current user\r\n   * \r\n   * @returns {Object|null} User data or null if not authenticated\r\n   */\n  AuthService.prototype.getCurrentUser = function () {\n    return this.user;\n  };\n\n  /**\r\n   * Get the current tenant\r\n   * \r\n   * @returns {Object|null} Tenant data or null if not in a tenant context\r\n   */\n  AuthService.prototype.getCurrentTenant = function () {\n    return this.tenant;\n  };\n\n  /**\r\n   * Check if user has a specific role\r\n   * \r\n   * @param {string} roleName Role name to check\r\n   * @returns {boolean} True if user has the role\r\n   */\n  AuthService.prototype.hasRole = function (roleName) {\n    return this.user && this.user.role === roleName;\n  };\n  return AuthService;\n}();\n\n// Create and export a singleton instance\nvar authService = new AuthService();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (authService);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/frontend/AuthService.js\n");

/***/ }),

/***/ "./resources/frontend/pages/LoginPage.js":
/*!***********************************************!*\
  !*** ./resources/frontend/pages/LoginPage.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _AuthService_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AuthService.js */ \"./resources/frontend/AuthService.js\");\n/**\r\n * LoginPage - Authentication component for CollaborInbox\r\n * \r\n * Provides user interface for login with tenant-aware authentication.\r\n * Handles form validation and error handling.\r\n */\n\nclass LoginPage {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.containerId = options.containerId || 'login-container';\n    this.onLoginSuccess = options.onLoginSuccess || this.defaultRedirect;\n    this.container = null;\n    this.form = null;\n    this.errorContainer = null;\n    this.isLoading = false;\n  }\n\n  /**\r\n   * Initialize the login page\r\n   */\n  init() {\n    this.container = document.getElementById(this.containerId);\n    if (!this.container) {\n      console.error(`Container with ID '${this.containerId}' not found`);\n      return;\n    }\n\n    // Check for a force_logout parameter in URL\n    const urlParams = new URLSearchParams(window.location.search);\n    if (urlParams.has('force_logout') || urlParams.has('nocache')) {\n      // Clear any existing auth data\n      localStorage.removeItem('auth_token');\n      localStorage.removeItem('user');\n      localStorage.removeItem('tenant');\n      console.log('Auth data cleared due to force_logout parameter');\n\n      // For good measure, attempt to reset fetch\n      if (window.originalFetch) {\n        window.fetch = window.originalFetch;\n      }\n\n      // Remove the parameter to prevent clearing on refresh\n      if (window.history && window.history.replaceState) {\n        const cleanUrl = window.location.pathname;\n        window.history.replaceState({}, document.title, cleanUrl);\n      }\n    }\n    this.render();\n    this.setupEventListeners();\n  }\n\n  /**\r\n   * Render the login form\r\n   */\n  render() {\n    // Get tenant from subdomain\n    const tenant = this.getTenantFromUrl();\n    const tenantDisplay = tenant ? `<div class=\"tenant-indicator\">\n                <span>Logging into: </span>\n                <strong>${tenant}</strong>\n            </div>` : '';\n    const html = `\n            <div class=\"login-form\">\n                <div class=\"login-header\">\n                    <h1>CollaborInbox</h1>\n                    <p>Shared Inbox & Thread Management</p>\n                    ${tenantDisplay}\n                </div>\n                \n                <div class=\"error-container\" style=\"display: none;\"></div>\n                \n                <form id=\"login-form\">\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email Address</label>\n                        <input type=\"email\" id=\"email\" name=\"email\" required autocomplete=\"email\" \n                               placeholder=\"Enter your email address\">\n                    </div>\n                    \n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" name=\"password\" required \n                               autocomplete=\"current-password\" placeholder=\"Enter your password\">\n                    </div>\n                    \n                    <div class=\"form-group remember-me\">\n                        <input type=\"checkbox\" name=\"remember\" id=\"remember\">\n                        <label for=\"remember\">Remember me</label>\n                    </div>\n                    \n                    <div class=\"form-group\">\n                        <button type=\"submit\" id=\"login-button\" class=\"primary-button\">\n                            Log In\n                        </button>\n                    </div>\n                </form>\n                \n                <div class=\"login-footer\">\n                    <p class=\"help-text\">Trouble logging in? Contact your administrator.</p>\n                </div>\n            </div>\n        `;\n    this.container.innerHTML = html;\n    this.form = document.getElementById('login-form');\n    this.errorContainer = document.querySelector('.error-container');\n  }\n\n  /**\r\n   * Set up event listeners for the form\r\n   */\n  setupEventListeners() {\n    this.form.addEventListener('submit', e => {\n      e.preventDefault();\n      if (this.isLoading) {\n        return;\n      }\n      this.clearErrors();\n      const email = document.getElementById('email').value;\n      const password = document.getElementById('password').value;\n      const remember = document.getElementById('remember').checked;\n      this.login(email, password, remember);\n    });\n  }\n\n  /**\r\n   * Process login with the provided credentials\r\n   * \r\n   * @param {string} email User email\r\n   * @param {string} password User password\r\n   * @param {boolean} remember Whether to remember the user\r\n   */\n  login(email, password, remember) {\n    this.setLoading(true);\n\n    // Get device name for token (using the browser info)\n    const deviceName = remember ? `${navigator.platform} ${navigator.userAgent.replace(/^.+?\\/(\\d+(\\.\\d+)?).+$/, '$1')}` : null;\n    console.log('Attempting login for:', email);\n\n    // Add a safety timeout to prevent permanent loading state\n    const safetyTimeout = setTimeout(() => {\n      if (this.isLoading) {\n        console.warn('Login safety timeout triggered');\n        this.setLoading(false);\n        this.showError('Login request timed out. Please try again or use the emergency logout button.');\n      }\n    }, 10000); // 10 second timeout\n\n    _AuthService_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].login(email, password, deviceName).then(response => {\n      clearTimeout(safetyTimeout);\n      console.log('Login response:', response);\n      this.setLoading(false);\n\n      // Add extra verification that we got a valid response\n      if (!response || typeof response !== 'object') {\n        throw new Error('Invalid response format from server');\n      }\n\n      // Check if we received a token\n      if (!response.token) {\n        throw new Error('No authentication token received from server');\n      }\n\n      // Check if the API provided a redirect URL\n      if (response && response.redirect) {\n        console.log('Redirecting to:', response.redirect);\n\n        // Add a small delay to ensure all tokens are properly saved\n        setTimeout(() => {\n          window.location.href = response.redirect;\n        }, 500);\n        return;\n      }\n\n      // Fallback to default redirect\n      setTimeout(() => {\n        this.onLoginSuccess(response);\n      }, 500);\n    }).catch(error => {\n      clearTimeout(safetyTimeout);\n      console.error('Login error:', error);\n      this.setLoading(false);\n      if (error.errors) {\n        // Validation errors\n        Object.keys(error.errors).forEach(field => {\n          this.showError(error.errors[field][0]);\n        });\n      } else if (error.message) {\n        // General error\n        this.showError(error.message);\n      } else {\n        // Unknown error\n        this.showError('An error occurred during login. Please try again or use the emergency logout button.');\n      }\n    });\n  }\n\n  /**\r\n   * Display error message\r\n   * \r\n   * @param {string} message Error message\r\n   */\n  showError(message) {\n    this.errorContainer.textContent = message;\n    this.errorContainer.style.display = 'block';\n  }\n\n  /**\r\n   * Clear any displayed errors\r\n   */\n  clearErrors() {\n    this.errorContainer.textContent = '';\n    this.errorContainer.style.display = 'none';\n  }\n\n  /**\r\n   * Set loading state\r\n   * \r\n   * @param {boolean} isLoading Whether the form is loading\r\n   */\n  setLoading(isLoading) {\n    this.isLoading = isLoading;\n    const loginButton = document.getElementById('login-button');\n    if (isLoading) {\n      loginButton.textContent = 'Logging in...';\n      loginButton.disabled = true;\n    } else {\n      loginButton.textContent = 'Log In';\n      loginButton.disabled = false;\n    }\n  }\n\n  /**\r\n   * Extract tenant from URL subdomain\r\n   * \r\n   * @returns {string|null} Tenant name or null if not found\r\n   */\n  getTenantFromUrl() {\n    const hostname = window.location.hostname;\n\n    // Check if we're on a subdomain\n    if (hostname.indexOf('.') > 0) {\n      // Extract the first part before the first dot\n      return hostname.split('.')[0];\n    }\n    return null;\n  }\n\n  /**\r\n   * Default redirect after login (to dashboard)\r\n   * \r\n   * @param {Object} response The login response data\r\n   */\n  defaultRedirect(response) {\n    // Check if we have a tenant in the response\n    if (response && response.tenant && response.tenant.id) {\n      // We have a tenant, check if we're already on the right domain\n      const currentTenant = this.getTenantFromUrl();\n      if (currentTenant) {\n        // Already on a tenant domain, just go to dashboard\n        window.location.href = '/dashboard';\n      } else {\n        // Not on a tenant domain, redirect to tenant domain\n        const domain = window.location.hostname.split('.').slice(1).join('.');\n        window.location.href = `https://${response.tenant.name}.${domain}/dashboard`;\n      }\n    } else {\n      // No tenant in response, redirect to central dashboard\n      window.location.href = '/dashboard';\n    }\n  }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LoginPage);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/frontend/pages/LoginPage.js\n");

/***/ }),

/***/ "./resources/js/auth.js":
/*!******************************!*\
  !*** ./resources/js/auth.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./babel-helpers */ \"./resources/js/babel-helpers.js\");\n/* harmony import */ var _babel_helpers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_helpers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _frontend_AuthService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../frontend/AuthService */ \"./resources/frontend/AuthService.js\");\n/* harmony import */ var _frontend_pages_LoginPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../frontend/pages/LoginPage */ \"./resources/frontend/pages/LoginPage.js\");\n// Import Babel helpers first to ensure they're available\n\n\n// Import auth components\n\n\n\n// Make components available globally\nwindow.AuthService = _frontend_AuthService__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\nwindow.LoginPage = _frontend_pages_LoginPage__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n\n// Initialize authentication service\ndocument.addEventListener('DOMContentLoaded', function () {\n  console.log('Auth bundle loaded');\n\n  // Check if we're on the login page\n  const loginContainer = document.getElementById('login-container');\n  if (loginContainer) {\n    console.log('Initializing login page');\n    const loginPage = new _frontend_pages_LoginPage__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n      containerId: 'login-container'\n    });\n    loginPage.init();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXV0aC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ3lCOztBQUV6QjtBQUNrRDtBQUNFOztBQUVwRDtBQUNBRSxNQUFNLENBQUNGLFdBQVcsR0FBR0EsNkRBQVc7QUFDaENFLE1BQU0sQ0FBQ0QsU0FBUyxHQUFHQSxpRUFBUzs7QUFFNUI7QUFDQUUsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRSxZQUFXO0VBQ3JEQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQzs7RUFFakM7RUFDQSxNQUFNQyxjQUFjLEdBQUdKLFFBQVEsQ0FBQ0ssY0FBYyxDQUFDLGlCQUFpQixDQUFDO0VBQ2pFLElBQUlELGNBQWMsRUFBRTtJQUNoQkYsT0FBTyxDQUFDQyxHQUFHLENBQUMseUJBQXlCLENBQUM7SUFDdEMsTUFBTUcsU0FBUyxHQUFHLElBQUlSLGlFQUFTLENBQUM7TUFDNUJTLFdBQVcsRUFBRTtJQUNqQixDQUFDLENBQUM7SUFDRkQsU0FBUyxDQUFDRSxJQUFJLENBQUMsQ0FBQztFQUNwQjtBQUNKLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NvbGxhYm9yaW5ib3gvLi9yZXNvdXJjZXMvanMvYXV0aC5qcz9hNzczIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydCBCYWJlbCBoZWxwZXJzIGZpcnN0IHRvIGVuc3VyZSB0aGV5J3JlIGF2YWlsYWJsZVxyXG5pbXBvcnQgJy4vYmFiZWwtaGVscGVycyc7XHJcblxyXG4vLyBJbXBvcnQgYXV0aCBjb21wb25lbnRzXHJcbmltcG9ydCBBdXRoU2VydmljZSBmcm9tICcuLi9mcm9udGVuZC9BdXRoU2VydmljZSc7XHJcbmltcG9ydCBMb2dpblBhZ2UgZnJvbSAnLi4vZnJvbnRlbmQvcGFnZXMvTG9naW5QYWdlJztcclxuXHJcbi8vIE1ha2UgY29tcG9uZW50cyBhdmFpbGFibGUgZ2xvYmFsbHlcclxud2luZG93LkF1dGhTZXJ2aWNlID0gQXV0aFNlcnZpY2U7XHJcbndpbmRvdy5Mb2dpblBhZ2UgPSBMb2dpblBhZ2U7XHJcblxyXG4vLyBJbml0aWFsaXplIGF1dGhlbnRpY2F0aW9uIHNlcnZpY2VcclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCkge1xyXG4gICAgY29uc29sZS5sb2coJ0F1dGggYnVuZGxlIGxvYWRlZCcpO1xyXG4gICAgXHJcbiAgICAvLyBDaGVjayBpZiB3ZSdyZSBvbiB0aGUgbG9naW4gcGFnZVxyXG4gICAgY29uc3QgbG9naW5Db250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbG9naW4tY29udGFpbmVyJyk7XHJcbiAgICBpZiAobG9naW5Db250YWluZXIpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnSW5pdGlhbGl6aW5nIGxvZ2luIHBhZ2UnKTtcclxuICAgICAgICBjb25zdCBsb2dpblBhZ2UgPSBuZXcgTG9naW5QYWdlKHtcclxuICAgICAgICAgICAgY29udGFpbmVySWQ6ICdsb2dpbi1jb250YWluZXInXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgbG9naW5QYWdlLmluaXQoKTtcclxuICAgIH1cclxufSk7ICJdLCJuYW1lcyI6WyJBdXRoU2VydmljZSIsIkxvZ2luUGFnZSIsIndpbmRvdyIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNvbnNvbGUiLCJsb2ciLCJsb2dpbkNvbnRhaW5lciIsImdldEVsZW1lbnRCeUlkIiwibG9naW5QYWdlIiwiY29udGFpbmVySWQiLCJpbml0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/auth.js\n");

/***/ }),

/***/ "./resources/js/babel-helpers.js":
/*!***************************************!*\
  !*** ./resources/js/babel-helpers.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\n/**\r\n * Babel Helper Functions\r\n * These functions support ES6+ features in browsers without native support\r\n */\n\n// Define process for browser environment\nif (typeof process === 'undefined') {\n  window.process = {\n    env: {\n      NODE_ENV: 'production'\n    }\n  };\n}\n\n// Class constructor check helper\nif (typeof window._classCallCheck === 'undefined') {\n  window._classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n}\n\n// Create class helper\nif (typeof window._createClass === 'undefined') {\n  window._createClass = function (Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}\n\n// Define properties helper\nif (typeof window._defineProperties === 'undefined') {\n  window._defineProperties = function (target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  };\n}\n\n// Object without properties helper\nif (typeof window._objectWithoutProperties === 'undefined') {\n  window._objectWithoutProperties = function (source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n        target[key] = source[key];\n      }\n    }\n    return target;\n  };\n}\n\n// Object without properties loose helper\nif (typeof window._objectWithoutPropertiesLoose === 'undefined') {\n  window._objectWithoutPropertiesLoose = function (source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n    return target;\n  };\n}\n\n// Object spread helper\nif (typeof window._objectSpread === 'undefined') {\n  window._objectSpread = function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n      ownKeys.forEach(function (key) {\n        target[key] = source[key];\n      });\n    }\n    return target;\n  };\n}\nconsole.log('Babel helpers loaded');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/babel-helpers.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/auth.js");
/******/ 	
/******/ })()
;